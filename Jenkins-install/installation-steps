Installation steps of Jenkins:  on centos or amazon linux 

https://www.jenkins.io/doc/tutorials/tutorial-for-installing-jenkins-on-AWS/

yum update -y
wget -O /etc/yum.repos.d/jenkins.repo     https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
sudo yum upgrade
sudo yum install jenkins java-1.8.0-openjdk-devel -y
(Note: if above fails user below 3 steps)
sudo yum install epel-release -y  
(or)  
sudo amazon-linux-extras install epel   ##( for amazon linux )
sudo yum install daemonize -y  
sudo yum install jenkins java-1.8.0-openjdk-devel -y 

sudo systemctl daemon-reload
sudo systemctl start jenkins
sudo systemctl status jenkins
cat /var/lib/jenkins/secrets/initialAdminPassword

----------------------------------------------------ERRORS DURING INSTALLATION -------------------------------------------
Error1:
sudo yum install jenkins java-1.8.0-openjdk-devel -y
error:
[Solved] Error: Package: jenkins-2.303.1-1.1.noarch (jenkins) Requires: daemonize --skip-broken to work
https://www.unixcloudfusion.in/2021/09/solved-error-package-jenkins-23031.html
Resolution:
Daemonize doesn't ship in the default repository thats why yum is not able to resolve it. You will need to install the Daemonize from the Epel repository which is the extra package for enterprise linux as

-----
Error2:
yum install epel-release -y  

Error: Nothing to do
epel-release is available in Amazon Linux Extra topic "epel"
To use, run
-->sudo amazon-linux-extras install epel

Error3:
Starting Jenkins File "/usr/bin/java" is not executable.
Nov 26 13:54:09 ip-172-31-87-38.ec2.internal jenkins[4037]: [FAILED]
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
CONFIGURE TOOLS 
MANAGE JENKINS -> GLOBAL TOOL CONFIGURATIONS

Manual installation
JAVA:
sudo yum install jenkins java-1.8.0-openjdk-devel -y 

readlink -f $(which java)
/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.302.b08-0.amzn2.0.1.x86_64/jre/bin/java

NAME: JAVA-1.8
JAVA_PATH:
/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.302.b08-0.amzn2.0.1.x86_64/

Manual installation
GIT:
NAME: git
PATH GIT EXECUTABLE : git

yum install git -y
Set path to git executable. This can be just "git" or complete path.

Automatic installation:
mvn:
name : mvn-1.8
select install automatically and tick version: 3.8.4
and save


For backend applications like JAVA use jenkins or graddle
for frontend javascript appns use NPM Or yarn
https://www.youtube.com/watch?v=L9Ite-1pEU8

install plugin for nodejs
nodejs



----------------------- Project -----------------------------
to create graddle and yarn for backend and frontend applications

add/install graddle directly(automatically) from globla tool configuration 
name it and click version of gradle

FOR NODEJS/YARN:
install plugin: nodejs

name and select version:

yarn is one of the npm packages

global npm packages to install --> yarn@1.13.0 (Specify list of packages to install globally -- see npm install -g. Note that you can fix the packages version by using 
the syntax `packageName@version`)

click on save

https://medium.com/@gustavo.guss/jenkins-starting-with-pipeline-doing-a-node-js-test-72c6057b67d4


pipeline {
   agent any 
   stages{
     stage("run frontend")
       steps{
         echo 'executing yarn ..'
         nodejs('node-17.1.0'){
             sh 'yarn install'
             sh 'npm config ls'
         }
       }
    }
     stage("run backend")
       steps{
         echo 'executing graddle'
         sh './gradle'       
         }
       }
   }
}



